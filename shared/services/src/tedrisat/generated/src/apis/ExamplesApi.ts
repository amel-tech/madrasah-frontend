/* tslint:disable */
/* eslint-disable */
/**
 * Tedrisat Service API
 * Education management service for Madrasah platform
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateExampleDto,
  MedarisResponse,
} from '../models/index';
import {
    CreateExampleDtoFromJSON,
    CreateExampleDtoToJSON,
    MedarisResponseFromJSON,
    MedarisResponseToJSON,
} from '../models/index';

export interface CreateExampleRequest {
    createExampleDto: CreateExampleDto;
}

export interface DeleteExampleRequest {
    id: number;
}

export interface GetExampleByIdRequest {
    id: number;
}

/**
 * 
 */
export class ExamplesApi extends runtime.BaseAPI {

    /**
     * Creates a new example with the provided data and returns the created example
     * Create a new example
     */
    async createExampleRaw(requestParameters: CreateExampleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MedarisResponse>> {
        if (requestParameters['createExampleDto'] == null) {
            throw new runtime.RequiredError(
                'createExampleDto',
                'Required parameter "createExampleDto" was null or undefined when calling createExample().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/examples`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateExampleDtoToJSON(requestParameters['createExampleDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MedarisResponseFromJSON(jsonValue));
    }

    /**
     * Creates a new example with the provided data and returns the created example
     * Create a new example
     */
    async createExample(requestParameters: CreateExampleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MedarisResponse> {
        const response = await this.createExampleRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Permanently deletes an example by its ID. This action cannot be undone.
     * Delete example by ID
     */
    async deleteExampleRaw(requestParameters: DeleteExampleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MedarisResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deleteExample().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MedarisResponseFromJSON(jsonValue));
    }

    /**
     * Permanently deletes an example by its ID. This action cannot be undone.
     * Delete example by ID
     */
    async deleteExample(requestParameters: DeleteExampleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MedarisResponse> {
        const response = await this.deleteExampleRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a complete list of all available examples in the system
     * Get all examples
     */
    async getAllExamplesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Retrieves a complete list of all available examples in the system
     * Get all examples
     */
    async getAllExamples(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getAllExamplesRaw(initOverrides);
    }

    /**
     * Retrieves a specific example by its unique identifier
     * Get example by ID
     */
    async getExampleByIdRaw(requestParameters: GetExampleByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MedarisResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getExampleById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/examples/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MedarisResponseFromJSON(jsonValue));
    }

    /**
     * Retrieves a specific example by its unique identifier
     * Get example by ID
     */
    async getExampleById(requestParameters: GetExampleByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MedarisResponse> {
        const response = await this.getExampleByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
